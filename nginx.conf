
user  nginx;
worker_processes  4;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    
    proxy_cache_path cache/ keys_zone=auth_cache:10m;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  180;

    client_max_body_size 5m;

    #gzip  on;

    server {
        server_name  localhost;
        listen       777 ssl;

        ssl_certificate     /etc/nginx/certs/$ssl_server_name.cer;
        ssl_certificate_key /etc/nginx/certs/$ssl_server_name.key;

        #auth_basic           "Secured models API";
        #auth_basic_user_file /etc/nginx/htpasswd;

        charset utf-8;
        #access_log  /var/log/nginx/host.access.log  main;
        
        resolver 127.0.0.11 valid=30s;
        
        location = /auth-proxy {
           internal;
            
           proxy_cache auth_cache;
           proxy_cache_key "$http_authorization$remote_user";
           proxy_cache_valid 200 10m;

           proxy_pass http://nginx_ldap:8888;
            
           proxy_pass_request_body off;
           proxy_set_header Content-Length "";
         
           # (Required if using Microsoft Active Directory as the LDAP server)
           # Set the LDAP template by uncommenting the following directive.
           proxy_set_header X-Ldap-Template "(sAMAccountName=%(username)s)";
       }

        location /financial-advisor/ {            
            auth_request /auth-proxy;
            set $upstream_app advisor;
            rewrite ^/financial-advisor/(.*)$ /$1 break; 
            proxy_pass http://$upstream_app;
            proxy_read_timeout 15s;
            proxy_send_timeout 5s;
        }

        location /similar-clients/stats/ {
            auth_request /auth-proxy;
            set $upstream_app similar_clients_stats;
            rewrite ^/similar-clients/stats/(.*)$ /$1 break;
            proxy_pass http://$upstream_app;
            proxy_read_timeout 15s;
            proxy_send_timeout 5s;
        }

        location /similar-clients/ {
            auth_request /auth-proxy;
            set $upstream_app similar_clients;
            rewrite ^/similar-clients/(.*)$ /$1 break;
            proxy_pass http://$upstream_app;
            proxy_read_timeout 15s;
            proxy_send_timeout 5s;
        }

        location /entry-compliance/ {
            auth_request /auth-proxy;
            set $upstream_app entry_compliance;
            rewrite ^/entry-compliance/(.*)$ /$1 break;
            proxy_pass http://$upstream_app/;
            proxy_read_timeout 15s;
            proxy_send_timeout 5s;
        }

         #location ~ \.(gif|jpg|png|svg|ico)$ {
         #    root /usr/share/nginx/html;
         #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
}
